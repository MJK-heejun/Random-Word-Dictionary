{"version":3,"sources":["C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src async","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.component.css","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.component.html","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.component.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.module.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/audio/audio.component.css","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/audio/audio.component.html","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/audio/audio.component.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/definition/definition.component.css","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/definition/definition.component.html","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/definition/definition.component.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/random/random.component.css","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/random/random.component.html","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/random/random.component.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/saved-list/saved-list.component.css","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/saved-list/saved-list.component.html","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/saved-list/saved-list.component.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting-service.service.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting/setting.component.css","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting/setting.component.html","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting/setting.component.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/word.service.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/environments/environment.ts","C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#appComp{\\r\\n    height:100vh;\\r\\n    overflow: hidden;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\nmd-toolbar{\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nmd-tab-group{\\r\\n    margin: 0;\\r\\n    border-top: 3px solid #000000; /*black*/\\r\\n    \\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.mat-sidenav-container > .mat-sidenav > .mat-tab-group > .mat-tab-header > .mat-tab-label-container > .mat-tab-list > .mat-tab-labels {\\r\\n  .mat-tab-label[role^='tab'] {\\r\\n    min-width: 50px;\\r\\n  }\\r\\n}\\r\\n\\r\\n    /*\\r\\n/deep/.mat-tab-label, /deep/.mat-tab-label-active{\\r\\n min-width: 0!important;\\r\\n padding: 3px!important;\\r\\n margin: 3px!important;\\r\\n}\\r\\n*/\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div id=\\\"appComp\\\">\\r\\n    <md-sidenav-container fxLayout=\\\"column\\\" fxFlexFill>\\r\\n\\r\\n        <md-toolbar fxLayout=\\\"row\\\">\\r\\n            <div class=\\\"sidenav-content\\\">\\r\\n                <button type=\\\"button\\\" md-button (click)=\\\"sidenav.open()\\\">\\r\\n                    <i class=\\\"fa fa-bars fa-2x\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n            </div>\\r\\n            <h3>Random Dictionary</h3>            \\r\\n        </md-toolbar>\\r\\n        <div class=\\\"main-content\\\" fxFlexFill>\\r\\n            <md-tab-group md-stretch-tabs \\r\\n                          (selectedIndexChange)=\\\"selectedIndexChange($event)\\\"\\r\\n                          [selectedIndex]=\\\"selectedIndex\\\">\\r\\n                <md-tab label=\\\"Random\\\">\\r\\n                    <app-random [newWord]=\\\"newWord\\\"></app-random>\\r\\n                </md-tab>\\r\\n                <md-tab label=\\\"Saved\\\">\\r\\n                    <app-saved-list (selectedWord)=\\\"wordFromList($event)\\\"\\r\\n                                    [selectedIndex]=\\\"selectedIndex\\\"></app-saved-list>\\r\\n                </md-tab>\\r\\n            </md-tab-group>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <md-sidenav #sidenav>\\r\\n            <app-setting></app-setting>\\r\\n        </md-sidenav>\\r\\n    </md-sidenav-container>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'app';\r\n    selectedIndex: number = 0;\r\n    newWord: string;\r\n\r\n    selectedIndexChange(val: number) {\r\n        this.selectedIndex = val;\r\n    }\r\n\r\n    wordFromList(ev) {\r\n        this.selectedIndex = 0;\r\n        this.newWord = ev;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n//component\r\nimport { AppComponent } from './app.component';\r\nimport { RandomComponent } from './random/random.component';\r\nimport { SettingComponent } from './setting/setting.component';\r\nimport { DefinitionComponent } from './definition/definition.component';\r\nimport { AudioComponent } from './audio/audio.component';\r\n//service\r\nimport { SettingServiceService } from './setting-service.service';\r\nimport { WordService } from './word.service';\r\nimport { SavedListComponent } from './saved-list/saved-list.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RandomComponent,\r\n    SettingComponent,\r\n    DefinitionComponent,\r\n    AudioComponent,\r\n    SavedListComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpModule,\r\n      BrowserAnimationsModule,\r\n      MaterialModule,\r\n      FlexLayoutModule,\r\n      FormsModule\r\n  ],\r\n  providers: [SettingServiceService, WordService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/audio/audio.component.css\n// module id = ../../../../../src/app/audio/audio.component.css\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/audio/audio.component.html\n// module id = ../../../../../src/app/audio/audio.component.html\n// module chunks = 1","import { Component, OnInit, Input } from '@angular/core';\r\nimport { WordService } from '../word.service';\r\nimport { SettingServiceService } from '../setting-service.service';\r\n\r\n@Component({\r\n  selector: 'app-audio',\r\n  templateUrl: './audio.component.html',\r\n  styleUrls: ['./audio.component.css']\r\n})\r\nexport class AudioComponent implements OnInit {\r\n    @Input() word: string;\r\n    audioSrc: string;\r\n    constructor(private wordService: WordService, private settingService: SettingServiceService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n      if (this.word) {\r\n          this.wordService.GetAudioUrl(this.word).subscribe( //subscribe to the observable return method              \r\n              data => {\r\n                  this.audioSrc = \"invliadAudioSrc\";\r\n                  if (data[0]) {\r\n                      this.audioSrc = data[0].fileUrl;\r\n                      if (this.settingService.IsAutoAudioLoading()) {\r\n                          var audio = new Audio(this.audioSrc);\r\n                          audio.play();\r\n                      }\r\n\r\n                  }\r\n              },\r\n              error => alert(error),\r\n              () => console.log(\"finished\")\r\n          );\r\n      }\r\n\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/audio/audio.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"p {\\r\\n    text-align: center;\\r\\n    padding: 5px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/definition/definition.component.css\n// module id = ../../../../../src/app/definition/definition.component.css\n// module chunks = 1","module.exports = \"<p>\\r\\n    {{definition}}\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/definition/definition.component.html\n// module id = ../../../../../src/app/definition/definition.component.html\n// module chunks = 1","import { Component, OnInit, Input } from '@angular/core';\r\nimport { WordService } from '../word.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-definition',\r\n  templateUrl: './definition.component.html',\r\n  styleUrls: ['./definition.component.css']\r\n})\r\nexport class DefinitionComponent implements OnInit {\r\n\r\n    @Input() word: string;\r\n\r\n    definition: string;\r\n    \r\n    constructor(private wordService: WordService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.word) {\r\n            this.wordService.GetDefinition(this.word).subscribe( //subscribe to the observable return method\r\n                data => {\r\n                    this.definition = data[0] ? data[0].text : \"definition not found\";\r\n                    if (this.definition.substring(0, 15) == \"Plural form of \") { //if plural form found.....\r\n                        let newSearchWord = this.definition.substring(15, this.definition.length - 1);\r\n                        this.wordService.GetDefinition(newSearchWord).subscribe(\r\n                            data => {\r\n                                let additionalDef = data[0] ? data[0].text : \"definition not found\";\r\n                                this.definition = `${this.definition} (${additionalDef})`;\r\n                            }\r\n                        );\r\n                    }\r\n                },\r\n                error => alert(error)\r\n            );    \r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/definition/definition.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#randomComponent{\\r\\n    overflow: hidden;\\r\\n    height: 70vh;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    margin: 10px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/random/random.component.css\n// module id = ../../../../../src/app/random/random.component.css\n// module chunks = 1","module.exports = \"<div id=\\\"randomComponent\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n    <div>\\r\\n        <h2>\\r\\n            {{myWord}}\\r\\n        </h2>\\r\\n        <app-definition [word]=\\\"myWord\\\"></app-definition>\\r\\n        <app-audio [word]=\\\"myWord\\\"></app-audio>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\">\\r\\n        <button md-raised-button (click)=\\\"onRandomClick()\\\">New Random Word</button>\\r\\n        <button md-raised-button (click)=\\\"onSaveClick()\\\">Save</button>\\r\\n    </div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/random/random.component.html\n// module id = ../../../../../src/app/random/random.component.html\n// module chunks = 1","import { Component, OnInit, Input } from '@angular/core';\r\nimport { WordService } from '../word.service';\r\nimport { SettingServiceService } from '../setting-service.service';\r\n\r\n@Component({\r\n  selector: 'app-random',\r\n  templateUrl: './random.component.html',\r\n  styleUrls: ['./random.component.css'],\r\n  providers: []\r\n})\r\nexport class RandomComponent implements OnInit {\r\n    @Input() newWord: string; //word from saved list\r\n    myWord: string;\r\n\r\n    constructor(private wordService: WordService, private settingService: SettingServiceService) { }\r\n\r\n    ngOnInit() {\r\n   \r\n    }\r\n\r\n    onRandomClick() {\r\n        let wordType = this.settingService.GetCurrentWordType() == \"any\" ? null : this.settingService.GetCurrentWordType();\r\n        \r\n        this.wordService.GetRandomWord(wordType).subscribe( //subscribe to the observable return method\r\n            data => this.myWord = data.word,\r\n            error => alert(error),\r\n            () => console.log(\"finished\")\r\n        );        \r\n    }\r\n\r\n    onSaveClick() {\r\n        this.wordService.AddToList(this.myWord);\r\n        alert(\"saved\");\r\n    }\r\n\r\n    //word from saved list\r\n    ngOnChanges() {\r\n        this.myWord = this.newWord;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/random/random.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#savedListComponent {\\r\\n    overflow-y: scroll;\\r\\n    height: 70vh;\\r\\n}\\r\\n\\r\\n\\r\\nmd-list{\\r\\n    /*height: 50vh;*/\\r\\n}\\r\\n\\r\\nmd-list-item {\\r\\n    \\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/saved-list/saved-list.component.css\n// module id = ../../../../../src/app/saved-list/saved-list.component.css\n// module chunks = 1","module.exports = \"<div id=\\\"savedListComponent\\\">\\r\\n    <md-list>\\r\\n        <md-list-item *ngFor=\\\"let word of wordList\\\">\\r\\n            <h4 md-line (click)=\\\"onListItemClick(word)\\\">{{word}}</h4>\\r\\n        </md-list-item>\\r\\n        <md-divider></md-divider>\\r\\n    </md-list>\\r\\n</div>\\r\\n\\r\\n<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <button md-raised-button (click)=\\\"onClear()\\\">Clear</button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/saved-list/saved-list.component.html\n// module id = ../../../../../src/app/saved-list/saved-list.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { WordService } from '../word.service';\n\n@Component({\n  selector: 'app-saved-list',\n  templateUrl: './saved-list.component.html',\n  styleUrls: ['./saved-list.component.css']\n})\nexport class SavedListComponent implements OnInit {\n    @Input() selectedIndex: number; //word from saved list\n    @Output() selectedWord = new EventEmitter();\n\n    wordList;\n    constructor(private wordService: WordService) { }\n\n    ngOnInit() {\n        this.wordList = this.wordService.GetList();    \n    }\n\n    onListItemClick(word:string) {\n        console.log(`${word} clicked`);\n        this.selectedWord.emit(word);\n    }\n\r\n    onClear() {\r\n        this.wordService.ClearList();    \r\n        this.wordList = this.wordService.GetList();    \r\n    }\r\n\r\n    ngOnChanges() {\r\n        //refresh the list\r\n        if (this.selectedIndex == 1)\r\n            this.wordList = this.wordService.GetList();\r\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/saved-list/saved-list.component.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SettingServiceService {\r\n\r\n    private wordType: string;\r\n    private isAutoAudioLoad: boolean = true;\r\n\r\n    constructor() {\r\n        this.wordType = \"any\";\r\n    }\r\n\r\n  public GetCurrentWordType(): string {\r\n      return this.wordType;\r\n  }\r\n\r\n  public SetWordType(wordType: string) {\r\n      this.wordType = wordType;\r\n  }\r\n\r\n\r\n  public IsAutoAudioLoading(): boolean {\r\n      return this.isAutoAudioLoad;\r\n  }\r\n\r\n  public SetAutoAudio(autoAudio: boolean) {\r\n      this.isAutoAudioLoad = autoAudio;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting-service.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#settingComponent{\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\nmd-radio-button, md-checkbox{\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.md-divider {\\r\\n    width: 100%;\\r\\n    border-width: 1px;\\r\\n    border-style: solid;\\r\\n    margin: 10px 0;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting/setting.component.css\n// module id = ../../../../../src/app/setting/setting.component.css\n// module chunks = 1","module.exports = \"<div id=\\\"settingComponent\\\">\\r\\n    <h2>Settings</h2>\\r\\n\\r\\n    <md-radio-group [(ngModel)]=\\\"wordType\\\" (ngModelChange)=\\\"onChange()\\\" fxLayout=\\\"column\\\">\\r\\n        <md-radio-button [value]=\\\"'any'\\\">\\r\\n            Any\\r\\n        </md-radio-button>\\r\\n        <md-radio-button [value]=\\\"'verb'\\\">\\r\\n            Verb\\r\\n        </md-radio-button>\\r\\n        <md-radio-button [value]=\\\"'noun'\\\">\\r\\n            Noun\\r\\n        </md-radio-button>\\r\\n        <md-radio-button [value]=\\\"'adjective'\\\">\\r\\n            Adjective\\r\\n        </md-radio-button>\\r\\n    </md-radio-group>\\r\\n    <md-divider></md-divider>\\r\\n\\r\\n    <div class=\\\"md-divider\\\"></div>\\r\\n\\r\\n\\r\\n    <section>\\r\\n        <md-checkbox  [(ngModel)]=\\\"isAutoAudioLoad\\\" (ngModelChange)=\\\"onChangeAudio()\\\">Auto Audio Play</md-checkbox>\\r\\n    </section>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting/setting.component.html\n// module id = ../../../../../src/app/setting/setting.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { SettingServiceService } from '../setting-service.service';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n\r\n    wordType: string = 'noun';\r\n    isAutoAudioLoad: boolean = true;\r\n\r\n    constructor(private settingService: SettingServiceService) { }\r\n\r\n    ngOnInit() {\r\n        this.wordType = this.settingService.GetCurrentWordType();\r\n    }\r\n    onChange() {\r\n        console.log(\"changed\");\r\n        this.settingService.SetWordType(this.wordType);\r\n    }\r\n\r\n\r\n    onChangeAudio() {\r\n        this.settingService.SetAutoAudio(this.isAutoAudioLoad);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/setting/setting.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class WordService {\r\n\r\n    baseUrl: string = `api.wordnik.com/v4/`;    \r\n\r\n    constructor(private http: Http) {\r\n        this.baseUrl = window.location.protocol == 'https:' ? `https://${this.baseUrl}` : `http://${this.baseUrl}`;\r\n    }\r\n\r\n    public GetRandomWord(wordType: string) {\r\n        let randomApi = `${this.baseUrl}words.json/randomWord?hasDictionaryDef=true&hasDictionaryDef=false&minCorpusCount=0&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5`;\r\n        let url = wordType ? `${randomApi}&includePartOfSpeech=${wordType}` : randomApi;\r\n        return this.http.get(url)\r\n            .map((res: Response) => res.json()); //convert observable into json format\r\n    }\r\n\r\n    public GetDefinition(word: string) {        \r\n        let url = `${this.baseUrl}word.json/${word}/definitions?limit=1&includeRelated=true&sourceDictionaries=all&useCanonical=true&includeTags=false&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5`;\r\n        return this.http.get(url)\r\n            .map((res: Response) => res.json()); //convert observable into json format\r\n    }\r\n\r\n    public GetAudioUrl(word: string) {\r\n        let url = `${this.baseUrl}word.json/${word}/audio?useCanonical=true&limit=1&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5`;\r\n        return this.http.get(url)\r\n            .map((res: Response) => res.json()); //convert observable into json format\r\n    }\r\n\r\n    public GetList() {\r\n        let key = \"randomWordDictionaryArray\";\r\n        return localStorage[key] ? JSON.parse(localStorage[key]) : [];\r\n    }\r\n\r\n\r\n    public AddToList(word: string) {\r\n        if (word) {\r\n            let key = \"randomWordDictionaryArray\";\r\n            if (!localStorage[key])\r\n                localStorage.setItem(key, JSON.stringify([]));\r\n            let currentArr = JSON.parse(localStorage[key]);\r\n            if (!currentArr.includes(word)) {\r\n                currentArr.push(word);\r\n                localStorage.setItem(key, JSON.stringify(currentArr));\r\n            }\r\n            console.log(\"storage list\");\r\n            console.log(localStorage[key]);\r\n        }\r\n    }\r\n\r\n    public ClearList() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    public RemoveFromList(word:string) {\r\n        let key = \"randomWordDictionaryArray\";\r\n        let currentArr = JSON.parse(localStorage[key]);\r\n        let index = currentArr.indexOf(word);\r\n        if (index !== -1) \r\n            currentArr.splice(index, 1);      \r\n        localStorage.setItem(key, JSON.stringify(currentArr));  \r\n        console.log(\"storage list\");\r\n        console.log(localStorage[key]);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/app/word.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/james/Documents/Visual Studio 2015/Projects/randomWordDictionary/randomWordDictionary/src/main.ts"],"sourceRoot":"webpack:///"}